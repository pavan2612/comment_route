{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/hooks/use-http.js","components/UI/LoadingSpinner.js","components/lib/api.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isArrayAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","LoadingSpinner","spinner","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","NoQuotesFound","noquotes","AllQuotes","dataLoading","useEffect","length","Card","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","CommentItem","CommentsList","comments","comment","NewCommentForm","commentTextRef","onAddComment","submitFormHandler","Comments","isAddingComment","setIsAddingComment","useParams","loadedComments","addCommentHandler","HighlightedQuote","QuoteDetails","console","log","match","useRouteMatch","path","exact","url","MainNavigation","styles","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.9714c3a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__w2TgD\",\"loading\":\"QuoteForm_loading__3Gs--\",\"control\":\"QuoteForm_control__2-CyO\",\"actions\":\"QuoteForm_actions__1K2Yc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2PeQ1\",\"logo\":\"MainNavigation_logo__1F71o\",\"nav\":\"MainNavigation_nav__1dEaf\",\"active\":\"MainNavigation_active__1bJFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__qBPIU\",\"loading\":\"NewCommentForm_loading__3qV-i\",\"control\":\"NewCommentForm_control__cIjnN\",\"actions\":\"NewCommentForm_actions__5dZFE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2wsfh\",\"sorting\":\"QuoteList_sorting__2On-H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__3XYMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__1hiQV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3RUfc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3mkqq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1EZNt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1I71O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__3mKPm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1fJeB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1Q80Y\"};","import { NavLink } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <NavLink to={`/quotes/${props.id}`} className='btn'>\n        View Fullscreen\n      </NavLink>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory,useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory()\n  const location = useLocation()\n  const queryparams = new URLSearchParams(location.search)\n  const isArrayAscending = queryparams.get('sort') === 'asc'\n\n  const sortedQuotes = sortQuotes(props.quotes,isArrayAscending)\n\n  const sortHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search:`?sort=${(isArrayAscending ? 'desc':'asc')}`\n    })\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n          <button onClick={sortHandler}>Sort  {isArrayAscending ? 'descending':'ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","const FIREBASE_DOMAIN = 'https://practicereact-755c2-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to='/newquotes' className='btn'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from '../components/quotes/QuoteList';\r\nimport useHttp from '../components/hooks/use-http';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport { getAllQuotes } from '../components/lib/api';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst AllQuotes = () => {\r\n    const {sendRequest,status,data:dataLoading,error} =useHttp(getAllQuotes,true)\r\n    useEffect(() => {\r\n        sendRequest()\r\n    },[sendRequest])\r\n    \r\n    if(status==='pending'){\r\n        return(\r\n        <div className='centered'><LoadingSpinner/></div>\r\n        )}\r\n    if(error){\r\n        return(\r\n        <div className='centered'>{error}</div>\r\n        )}\r\n    if(status==='completed' && (dataLoading.length===0 || !dataLoading)){\r\n        return(\r\n        <NoQuotesFound />\r\n        )}\r\n    return(\r\n        <QuoteList quotes={dataLoading}/>\r\n    )\r\n}\r\nexport default AllQuotes","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef,useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering,setIsEntering] = useState(false)\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const inputFocusHandler = () => {\n      setIsEntering(true)\n  }\n  const enteringHandler = () => {\n    setIsEntering(false)\n  }\n\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={() => 'Do u want to leave without saving?'}></Prompt>\n      <Card>\n        <form onFocus={inputFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={enteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from \"../components/quotes/QuoteForm\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport useHttp from \"../components/hooks/use-http\"\r\nimport { addQuote } from \"../components/lib/api\"\r\nimport { useEffect } from \"react\"\r\n\r\nconst NewQuote= () => {\r\n    const {sendRequest,status} = useHttp(addQuote)\r\n    const history = useHistory()\r\n\r\n    const quoteHandler = (quoteData) => {\r\n        sendRequest(quoteData)\r\n    }\r\n    useEffect(() => {\r\n        if(status==='completed'){\r\n            history.push('/quotes')\r\n        }\r\n    },[status,history])\r\n\r\n    return(\r\n        <QuoteForm isLoading={status==='pending'} onAddQuote={quoteHandler}/>\r\n    )\r\n}\r\nexport default NewQuote","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\nimport useHttp from '../hooks/use-http';\nimport { addComment } from '../lib/api';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const {sendRequest,status,error} = useHttp(addComment,true)\n  const {onAddComment} = props\n\n  useEffect(() => {\n    if(status==='completed' && !error){\n    onAddComment()\n    }},[status,onAddComment,error])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value\n    sendRequest({commentData:{text:enteredText},quoteId:props.quoteId})\n\n    // optional: Could validate here\n\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useEffect } from 'react/cjs/react.development';\nimport useHttp from '../hooks/use-http';\nimport { getAllComments } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './Comments.module.css';\nimport CommentsList from './CommentsList';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams()\n  const {quoteId} = params\n\n  const {status,data:loadedComments,sendRequest} = useHttp(getAllComments)\n\n  useEffect(() => {\n      sendRequest(quoteId)\n  },[sendRequest,quoteId])\n\n  const addCommentHandler = useCallback(() => {\n    sendRequest(quoteId)\n  },[sendRequest,quoteId])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  let comments\n  if(status==='pending'){\n    comments = <div className='centered'><LoadingSpinner/></div>\n  }\n  if(status==='completed' && loadedComments && loadedComments.length>0){\n    comments = <CommentsList comments={loadedComments}/>\n  }\n  if(status==='completed' && (!loadedComments || loadedComments.length===0)){\n    comments = <p className='centered'>No Comments were made yet</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddComment={addCommentHandler}/>}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\"\r\nimport { Link, Route,useParams, useRouteMatch } from \"react-router-dom\"\r\nimport Comments from '../components/comments/Comments'\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\r\nimport useHttp from \"../components/hooks/use-http\"\r\nimport { getSingleQuote } from \"../components/lib/api\"\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\"\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\"\r\n\r\n\r\nconst QuoteDetails = () => {\r\n    const params = useParams()\r\n    const {quoteId} = params\r\n    console.log(quoteId)\r\n    const match = useRouteMatch()\r\n    const {sendRequest,status,data:loadedQuote,error} = useHttp(getSingleQuote,true)\r\n    \r\n    useEffect(() => {\r\n        sendRequest(quoteId)\r\n    },[sendRequest,quoteId])\r\n\r\n    console.log('pending')\r\n\r\n    if(status==='pending'){\r\n        return(\r\n        <div className='centered'><LoadingSpinner /></div>\r\n        )}\r\n\r\n    console.log('error')\r\n    if(status==='error'){\r\n        return(\r\n        <div className='centered'>{error}</div>\r\n        )}\r\n\r\n    console.log('text')\r\n    if(!loadedQuote.text){\r\n        return(\r\n        <div className='centered'><NoQuotesFound/></div>\r\n        )}\r\n    console.log('quoteId')\r\n    console.log(match)\r\n\r\n    return(\r\n        <Fragment>\r\n            <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author}/>\r\n            <Route path={match.path} exact>\r\n                <div className='centered'>\r\n                    <Link className='btn--flat' to={`${match.url}/comments`}>Load Comments</Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments />\r\n            </Route>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default QuoteDetails","import { NavLink } from 'react-router-dom'\r\nimport styles from './MainNavigation.module.css'\r\nconst MainNavigation = () => {\r\n    return (\r\n        <header className={styles.header}>\r\n            <div className={styles.logo}>Great Quotes</div>\r\n            <nav className={styles.nav}>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to='/quotes' activeClassName={styles.active}>\r\n                            All Quotes\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/newquotes' activeClassName={styles.active}>\r\n                            Add a Quote\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n\r\n}\r\nexport default MainNavigation","import { Fragment } from \"react\"\r\nimport MainNavigation from \"./MainNavigation\"\r\nimport styles from './Layout.module.css'\r\n\r\nconst Layout = (props) => {\r\n    return(\r\n        <Fragment>\r\n            <MainNavigation />\r\n            <main className={styles.main}>{props.children}</main>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\nexport default Layout","const NotFound = () => {\r\n    return(\r\n        <div className='centered'>Page Not Found</div>\r\n    )\r\n}\r\nexport default NotFound","import {Route,Switch,Redirect} from 'react-router-dom'\nimport AllQuotes from './pages/AllQuotes';\nimport NewQuote from './pages/NewQuote';\nimport QuoteDetails from './pages/QuoteDetails';\nimport Layout from './components/layout/Layout';\nimport NotFound from './pages/NotFound';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <Redirect to='quotes'/>\n        </Route>\n        <Route path='/quotes' exact>\n          <AllQuotes />\n        </Route>\n        <Route path='/quotes/:quoteId'>\n          <QuoteDetails />\n        </Route>\n        <Route path='/newquotes'>\n          <NewQuote />\n        </Route>\n        <Route path='*'>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <App />\n                </BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}